<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 / Integration Mybatis Process Settings -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<!-- 1. 데이터베이스 관련 매개 변수의 속성 설정: ${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2.数据库连接池 / Database connection pool -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 / Set connection pool properties -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0连接池的私有属性 / c3p0 connection pool private properties -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit / Do not commit automatically after closing the connection-->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 / Get connection timeout period -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 / Number of retries when connection acquisition fails-->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3.配置SqlSessionFactory对象 / SqlSessionFactory Object Settings-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 / Inject database connection pool -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件(전역설정파일):mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 / entity 패키지를 스캔하면 별명 사용-->
		<property name="typeAliasesPackage" value="com.soecode.lyf.entity" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 / sql 설정 파일 스캔: mapper에 필요한 xml 파일 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<!-- Dao 인터페이스 패키지를 스캔하고, Dao 인터페이스를 동적으로 구현하여 spring 용기에 주입하도록 설정합니다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 Dao 인터페이스 패키지를 스캔해야 합니다 -->
		<property name="basePackage" value="com.soecode.lyf.dao" />
	</bean>
</beans>